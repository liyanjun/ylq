<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yunquanlai.admin.user.dao.UserDepositFlowDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.yunquanlai.admin.user.entity.UserDepositFlowEntity" id="userDepositFlowMap">
        <result property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="beforeDeposit" column="before_deposit"/>
        <result property="afterDeposit" column="after_deposit"/>
        <result property="userInfoId" column="user_info_id"/>
        <result property="creationTime" column="creation_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.yunquanlai.admin.user.entity.UserDepositFlowEntity">
		select
					`id`, 
					`type`, 
					`before_deposit`, 
					`after_deposit`, 
					`user_info_id`, 
					`creation_time`
				from user_deposit_flow where id = #{id}
        <if test="isLock != null and isLock == true">for update</if>
	</select>

	<select id="queryList" resultType="com.yunquanlai.admin.user.entity.UserDepositFlowEntity">
		select
		            `id`, 
		            `type`, 
		            `before_deposit`, 
		            `after_deposit`, 
		            `user_info_id`, 
		            `creation_time`
				from user_deposit_flow
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from user_deposit_flow 
	</select>
	 
	<insert id="save" parameterType="com.yunquanlai.admin.user.entity.UserDepositFlowEntity" useGeneratedKeys="true" keyProperty="id">
		insert into user_deposit_flow
		(
			`type`, 
			`before_deposit`, 
			`after_deposit`, 
			`user_info_id`, 
			`creation_time`
		)
		values
		(
			#{type}, 
			#{beforeDeposit}, 
			#{afterDeposit}, 
			#{userInfoId}, 
			#{creationTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.yunquanlai.admin.user.entity.UserDepositFlowEntity">
		update user_deposit_flow 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="beforeDeposit != null">`before_deposit` = #{beforeDeposit}, </if>
			<if test="afterDeposit != null">`after_deposit` = #{afterDeposit}, </if>
			<if test="userInfoId != null">`user_info_id` = #{userInfoId}, </if>
			<if test="creationTime != null">`creation_time` = #{creationTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from user_deposit_flow where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from user_deposit_flow where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>