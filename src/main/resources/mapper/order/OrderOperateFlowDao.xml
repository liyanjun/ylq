<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yunquanlai.admin.order.dao.OrderOperateFlowDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.yunquanlai.admin.order.entity.OrderOperateFlowEntity" id="orderOperateFlowMap">
        <result property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="beforeStatus" column="before_status"/>
        <result property="afterStatus" column="after_status"/>
        <result property="remark" column="remark"/>
		<result property="orderId" column="order_id"/>
        <result property="operatorTime" column="operator_time"/>
        <result property="operatorId" column="operator_id"/>
        <result property="operatorName" column="operator_name"/>
    </resultMap>

	<select id="queryObject" resultType="com.yunquanlai.admin.order.entity.OrderOperateFlowEntity">
		select
					`id`, 
					`type`, 
					`before_status`, 
					`after_status`, 
					`remark`, 
					`order_id`,
					`operator_time`,
					`operator_id`,
					`operator_name`
				from order_operate_flow where id = #{id}
        <if test="isLock != null and isLock == true">for update</if>
	</select>

	<select id="queryList" resultType="com.yunquanlai.admin.order.entity.OrderOperateFlowEntity">
		select
		            `id`, 
		            `type`, 
		            `before_status`, 
		            `after_status`, 
		            `remark`, 
		            `order_id`,
		            `operator_time`,
		            `operator_id`,
		            `operator_name`
				from order_operate_flow
		<where>
			<if test="orderId != null and orderId.trim() != ''">
				and `order_id` like concat('%',#{orderId},'%')
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from order_operate_flow
	</select>
	 
	<insert id="save" parameterType="com.yunquanlai.admin.order.entity.OrderOperateFlowEntity" useGeneratedKeys="true" keyProperty="id">
		insert into order_operate_flow
		(
			`type`, 
			`before_status`, 
			`after_status`, 
			`remark`, 
			`order_id`,
			`operator_time`,
			`operator_id`,
			`operator_name`
		)
		values
		(
			#{type}, 
			#{beforeStatus}, 
			#{afterStatus}, 
			#{remark}, 
			#{orderId},
			#{operatorTime},
			#{operatorId},
			#{operatorName}
		)
	</insert>
	 
	<update id="update" parameterType="com.yunquanlai.admin.order.entity.OrderOperateFlowEntity">
		update order_operate_flow
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="beforeStatus != null">`before_status` = #{beforeStatus}, </if>
			<if test="afterStatus != null">`after_status` = #{afterStatus}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="orderId != null">`order_id` = #{orderId}, </if>
			<if test="operatorTime != null">`operator_time` = #{operatorTime}, </if>
			<if test="operatorId != null">`operator_id` = #{operatorId}, </if>
			<if test="operatorName != null">`operator_name` = #{operatorName}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from order_operate_flow where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from order_operate_flow where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>